[{"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\index.js":"1","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js":"2","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js":"3","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\layouts\\Admin.js":"4","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\layouts\\Auth.js":"5","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\routes.js":"6","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Navbars\\AdminNavbar.js":"7","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Navbars\\AuthNavbar.js":"8","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Footers\\AuthFooter.js":"9","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Footers\\AdminFooter.js":"10","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Sidebar\\Sidebar.js":"11","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ConfirmPassword.js":"12","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ResetPassword.js":"13","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ConfirmEmail.js":"14","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\EditProfile.js":"15","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\UsersTable.js":"16","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js":"17","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\network\\ApiAxios.js":"18","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Profile.js":"19","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Login.js":"20","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Maps.js":"21","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\Index.js":"22","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Register.js":"23","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Icons.js":"24","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Tables.js":"25","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Headers\\EditHeader.js":"26","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Headers\\Header.js":"27","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\config.js":"28","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Headers\\UserHeader.js":"29","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\variables\\charts.js":"30"},{"size":1439,"mtime":1666697425161,"results":"31","hashOfConfig":"32"},{"size":390,"mtime":1666697425152,"results":"33","hashOfConfig":"32"},{"size":390,"mtime":1666697425150,"results":"34","hashOfConfig":"32"},{"size":2624,"mtime":1666697425163,"results":"35","hashOfConfig":"32"},{"size":3187,"mtime":1666697425165,"results":"36","hashOfConfig":"32"},{"size":3547,"mtime":1666697425171,"results":"37","hashOfConfig":"32"},{"size":5524,"mtime":1666697425147,"results":"38","hashOfConfig":"32"},{"size":3945,"mtime":1666697425148,"results":"39","hashOfConfig":"32"},{"size":2976,"mtime":1666697425137,"results":"40","hashOfConfig":"32"},{"size":2944,"mtime":1666697425135,"results":"41","hashOfConfig":"32"},{"size":11098,"mtime":1666697425155,"results":"42","hashOfConfig":"32"},{"size":4444,"mtime":1666697425182,"results":"43","hashOfConfig":"32"},{"size":5137,"mtime":1666697425201,"results":"44","hashOfConfig":"32"},{"size":1450,"mtime":1666697425180,"results":"45","hashOfConfig":"32"},{"size":6406,"mtime":1666697425184,"results":"46","hashOfConfig":"32"},{"size":2118,"mtime":1666697425211,"results":"47","hashOfConfig":"32"},{"size":898,"mtime":1666697425203,"results":"48","hashOfConfig":"32"},{"size":1427,"mtime":1666697425168,"results":"49","hashOfConfig":"32"},{"size":19933,"mtime":1666697425196,"results":"50","hashOfConfig":"32"},{"size":7639,"mtime":1666697425190,"results":"51","hashOfConfig":"32"},{"size":3577,"mtime":1666697425193,"results":"52","hashOfConfig":"32"},{"size":12752,"mtime":1666697425177,"results":"53","hashOfConfig":"32"},{"size":11400,"mtime":1666697425198,"results":"54","hashOfConfig":"32"},{"size":124668,"mtime":1666697425187,"results":"55","hashOfConfig":"32"},{"size":72861,"mtime":1666697425207,"results":"56","hashOfConfig":"32"},{"size":2527,"mtime":1666697425142,"results":"57","hashOfConfig":"32"},{"size":6620,"mtime":1666697425143,"results":"58","hashOfConfig":"32"},{"size":154,"mtime":1666697425158,"results":"59","hashOfConfig":"32"},{"size":2495,"mtime":1666697425145,"results":"60","hashOfConfig":"32"},{"size":11063,"mtime":1666697425174,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1d5g17z",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\index.js",[],["129","130"],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\layouts\\Admin.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\layouts\\Auth.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\routes.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Footers\\AuthFooter.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Footers\\AdminFooter.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ConfirmPassword.js",["131","132","133","134","135"],"/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport {confirmReset, forgotPassword, login} from \"../../network/ApiAxios\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst ConfirmPassword = props => {\r\n\r\n    const {id} = useParams();\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const confirm = async () => {\r\n        if (password !== confirmPassword) {\r\n            setError(\"Passwords have to match\");\r\n            return;\r\n        }\r\n        const response = await confirmReset(id, password);\r\n        const {data} = response;\r\n        if (data.success) {\r\n            props.history.push(\"/auth/reset-success\");\r\n        } else {\r\n            setError(data.msg);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col lg=\"5\" md=\"7\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <Form role=\"form\">\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"new-password\" value={password}\r\n                                           onChange={e => setPassword(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Confirm Password\" type=\"password\" autoComplete=\"new-password\" value={confirmPassword}\r\n                                           onChange={e => setConfirmPassword(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            {error ?\r\n                                <div className=\"text-muted font-italic\">\r\n                                    <small>\r\n                                        error:{\" \"}\r\n                                        <span className=\"text-red font-weight-700\">{error}</span>\r\n                                    </small>\r\n                                </div> : null }\r\n                            <div className=\"text-center\">\r\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={confirm}>\r\n                                    Reset Password\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ConfirmPassword;\r\n","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ResetPassword.js",["136","137","138"],"/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport {forgotPassword, login} from \"../../network/ApiAxios\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport config from \"../../config\";\r\n\r\nconst ResetPassword = props => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [toastMessage, setToastMessage] = useState(\"Email sent! Check it to reset your password.\");\r\n    const [userID, setUserID] = useState(null);\r\n\r\n    const sendEmail = async () => {\r\n        const response = await forgotPassword(email);\r\n        const {data} = response;\r\n        if (data.success) {\r\n            console.log(data);\r\n            if (config.DEMO) {\r\n                setToastMessage(\"This is a demo, so we will not send you an email. Instead, click on this link to reset your password:\")\r\n                setUserID(data.userID);\r\n            }\r\n            setShowToast(true);\r\n        } else {\r\n            setError(data.errors[0].msg);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                aria-live=\"polite\"\r\n                aria-atomic=\"true\"\r\n                style={{\r\n                    position: 'fixed',\r\n                    minHeight: '100px',\r\n                    width: \"35%\",\r\n                    right: 10,\r\n                    bottom: 100,\r\n                    zIndex: 50\r\n                }}\r\n            >\r\n                <Toast style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    right: 0,\r\n                    backgroundColor: \"white\",\r\n                    padding: 10,\r\n                    borderRadius: 10\r\n                }} onClose={() => setShowToast(false)} show={showToast} delay={5000} autohide={!config.DEMO}>\r\n                    <Toast.Header>\r\n                        <img style={{height: \"30px\", width: \"100px\"}} src={require(\"assets/img/brand/argon-react.png\").default}  alt=\"...\"/>\r\n                    </Toast.Header>\r\n                    <Toast.Body>\r\n                        {toastMessage}\r\n                        {config.DEMO ?\r\n                            <a href={config.DOMAIN_NAME + '/auth/confirm-password/' + userID}>\r\n                                {config.DOMAIN_NAME + '/auth/confirm-password/' + userID}\r\n                            </a> : null}\r\n                    </Toast.Body>\r\n                </Toast>\r\n            </div>\r\n            <Col lg=\"5\" md=\"7\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <Form role=\"form\">\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-email-83\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\r\n                                           onChange={e => setEmail(e.target.value)}/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            {error ?\r\n                                <div className=\"text-muted font-italic\">\r\n                                    <small>\r\n                                        error:{\" \"}\r\n                                        <span className=\"text-red font-weight-700\">{error}</span>\r\n                                    </small>\r\n                                </div> : null }\r\n                            <div className=\"text-center\">\r\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={sendEmail}>\r\n                                    Reset Password\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ConfirmEmail.js",["139"],"import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {confirmRegister} from \"../../network/ApiAxios\";\r\nimport {Card, CardBody, Col} from \"reactstrap\";\r\n\r\nconst ConfirmEmail = props => {\r\n\r\n    const {id} = useParams();\r\n    const [valid, setValid] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (!id) {\r\n            setValid(false);\r\n        } else {\r\n            const runAsync = async () => {\r\n                const response = await confirmRegister(id);\r\n                const {data} = response;\r\n                console.log(data);\r\n                if (!data.success) {\r\n                    setValid(false);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        props.history.push('/auth/login');\r\n                    }, 5000);\r\n                }\r\n            }\r\n            runAsync();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Col lg=\"6\" md=\"8\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center mb-4\">\r\n                            <h1>{valid ? \"Email confirmed! You will be redirected to login...\" : \"Something went wrong!\"}</h1>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ConfirmEmail;\r\n","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\EditProfile.js",["140"],"/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n// core components\r\nimport UserHeader from \"components/Headers/UserHeader.js\";\r\nimport EditHeader from \"../../components/Headers/EditHeader\";\r\nimport {edit} from \"../../network/ApiAxios\";\r\n\r\nconst EditProfile = props => {\r\n\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    const [name, setName] = useState(user.name);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [isTestUser, setIsTestUser] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem(\"user\")).email === \"test@test.com\") {\r\n            setIsTestUser(true);\r\n        }\r\n    }, []);\r\n\r\n    const editUser = async () => {\r\n        const response = await edit(user._id, name, email);\r\n        const { data } = response;\r\n        if (data.success) {\r\n            user = {...user, name, email}\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            props.history.push(\"/admin/user-profile\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EditHeader/>\r\n            {/* Page content */}\r\n            <Container className=\"mt--7\" fluid>\r\n                <Row>\r\n                    <div className=\"col\">\r\n                        <Card className=\"bg-secondary shadow\">\r\n                            <CardHeader className=\"bg-white border-0\">\r\n                                <Row className=\"align-items-center\">\r\n                                    <Col xs=\"8\">\r\n                                        <h3 className=\"mb-0\">My account</h3>\r\n                                        {isTestUser ? <h5>You are not allowed to edit the test user. Create another user to test this functionality</h5> : null}\r\n                                    </Col>\r\n                                    <Col className=\"text-right\" xs=\"4\">\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            href=\"#pablo\"\r\n                                            onClick={editUser}\r\n                                            size=\"sm\"\r\n                                            disabled={isTestUser}\r\n                                        >\r\n                                            Save\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <Form>\r\n                                    <h6 className=\"heading-small text-muted mb-4\">\r\n                                        User information\r\n                                    </h6>\r\n                                    <div className=\"pl-lg-4\">\r\n                                        <Row>\r\n                                            <Col lg=\"6\">\r\n                                                <FormGroup>\r\n                                                    <label\r\n                                                        className=\"form-control-label\"\r\n                                                        htmlFor=\"input-username\"\r\n                                                    >\r\n                                                        Username\r\n                                                    </label>\r\n                                                    <Input\r\n                                                        className=\"form-control-alternative\"\r\n                                                        value={name}\r\n                                                        id=\"input-username\"\r\n                                                        placeholder=\"Username\"\r\n                                                        onChange={e => setName(e.target.value)}\r\n                                                        type=\"text\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col lg=\"6\">\r\n                                                <FormGroup>\r\n                                                    <label\r\n                                                        className=\"form-control-label\"\r\n                                                        htmlFor=\"input-email\"\r\n                                                    >\r\n                                                        Email address\r\n                                                    </label>\r\n                                                    <Input\r\n                                                        className=\"form-control-alternative\"\r\n                                                        id=\"input-email\"\r\n                                                        value={email}\r\n                                                        onChange={e => setEmail(e.target.value)}\r\n                                                        type=\"email\"\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n);\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\UsersTable.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js",["141","142","143","144"],"import React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {confirmRegister} from \"../../network/ApiAxios\";\r\nimport {Card, CardBody, Col} from \"reactstrap\";\r\n\r\nconst ResetPasswordSuccess = props => {\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            props.history.push(\"/auth/login\");\r\n        }, 5000);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Col lg=\"6\" md=\"8\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center mb-4\">\r\n                            <h1>Password reset confirmed! You will be redirected to login...</h1>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ResetPasswordSuccess;\r\n","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\network\\ApiAxios.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Profile.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Login.js",["145","146"],"/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, {useState} from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\nimport {login} from \"../../network/ApiAxios\";\r\n\r\nconst Login = props => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const tryLogin = async () => {\r\n        const response = await login(email, password);\r\n        const {data} = response;\r\n        if (data.success) {\r\n            setError(\"\");\r\n            localStorage.setItem(\"token\", data.token);\r\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n            props.history.push(\"/\");\r\n        } else {\r\n            setPassword(\"\");\r\n            setError(data.msg);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Col lg=\"5\" md=\"7\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardHeader className=\"bg-transparent pb-5\">\r\n                        <div className=\"text-muted text-center mt-2 mb-3\">\r\n                            <small>Sign in with</small>\r\n                        </div>\r\n                        <div className=\"btn-wrapper text-center\">\r\n                            <Button\r\n                                className=\"btn-neutral btn-icon\"\r\n                                color=\"default\"\r\n                                href=\"#pablo\"\r\n                                onClick={e => e.preventDefault()}\r\n                            >\r\n                  <span className=\"btn-inner--icon\">\r\n                    <img\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/icons/common/github.svg\").default}\r\n                    />\r\n                  </span>\r\n                                <span className=\"btn-inner--text\">Github</span>\r\n                            </Button>\r\n                            <Button\r\n                                className=\"btn-neutral btn-icon\"\r\n                                color=\"default\"\r\n                                href=\"#pablo\"\r\n                                onClick={e => e.preventDefault()}\r\n                            >\r\n                  <span className=\"btn-inner--icon\">\r\n                    <img\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/icons/common/google.svg\").default}\r\n                    />\r\n                  </span>\r\n                                <span className=\"btn-inner--text\">Google</span>\r\n                            </Button>\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center text-muted mb-4\">\r\n                            <small>Or sign in with credentials</small>\r\n                        </div>\r\n                        <Form role=\"form\">\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-email-83\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Email\" type=\"email\" autoComplete=\"email\" value={email}\r\n                                           onChange={e => setEmail(e.target.value)}/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\"/>\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input placeholder=\"Password\" type=\"password\" autoComplete=\"password\" value={password}\r\n                                           onChange={e => setPassword(e.target.value)}/>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            {/*<div className=\"custom-control custom-control-alternative custom-checkbox\">*/}\r\n                            {/*    <input*/}\r\n                            {/*        className=\"custom-control-input\"*/}\r\n                            {/*        id=\" customCheckLogin\"*/}\r\n                            {/*        type=\"checkbox\"*/}\r\n                            {/*    />*/}\r\n                            {/*    <label*/}\r\n                            {/*        className=\"custom-control-label\"*/}\r\n                            {/*        htmlFor=\" customCheckLogin\"*/}\r\n                            {/*    >*/}\r\n                            {/*        <span className=\"text-muted\">Remember me</span>*/}\r\n                            {/*    </label>*/}\r\n                            {/*</div>*/}\r\n                            {error ?\r\n                                <div className=\"text-muted font-italic\">\r\n                                    <small>\r\n                                        error:{\" \"}\r\n                                        <span className=\"text-red font-weight-700\">{error}</span>\r\n                                    </small>\r\n                                </div> : null }\r\n                            <div className=\"text-center\">\r\n                                <Button className=\"my-4\" color=\"primary\" type=\"button\" onClick={tryLogin}>\r\n                                    Sign in\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n                <Row className=\"mt-3\">\r\n                    <Col xs=\"6\">\r\n                        <a\r\n                            className=\"text-light\"\r\n                            onClick={() => props.history.push('/auth/reset-password')}\r\n                        >\r\n                            <small>Forgot password?</small>\r\n                        </a>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"6\">\r\n                        <a\r\n                            className=\"text-light\"\r\n                            onClick={() => props.history.push('/auth/register')}\r\n                        >\r\n                            <small>Create new account</small>\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Maps.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\Index.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Register.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Icons.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\views\\examples\\Tables.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Headers\\EditHeader.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Headers\\Header.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\config.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\components\\Headers\\UserHeader.js",[],"C:\\Users\\r.ramos\\Documents\\GitHub\\calc-1-react-nodejs\\front-end\\src\\variables\\charts.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":24,"column":5,"nodeType":"153","messageId":"154","endLine":24,"endColumn":15},{"ruleId":"151","severity":1,"message":"155","line":32,"column":5,"nodeType":"153","messageId":"154","endLine":32,"endColumn":8},{"ruleId":"151","severity":1,"message":"156","line":35,"column":23,"nodeType":"153","messageId":"154","endLine":35,"endColumn":37},{"ruleId":"151","severity":1,"message":"157","line":35,"column":39,"nodeType":"153","messageId":"154","endLine":35,"endColumn":44},{"ruleId":"151","severity":1,"message":"158","line":36,"column":8,"nodeType":"153","messageId":"154","endLine":36,"endColumn":13},{"ruleId":"151","severity":1,"message":"152","line":24,"column":5,"nodeType":"153","messageId":"154","endLine":24,"endColumn":15},{"ruleId":"151","severity":1,"message":"155","line":32,"column":5,"nodeType":"153","messageId":"154","endLine":32,"endColumn":8},{"ruleId":"151","severity":1,"message":"157","line":35,"column":25,"nodeType":"153","messageId":"154","endLine":35,"endColumn":30},{"ruleId":"159","severity":1,"message":"160","line":29,"column":8,"nodeType":"161","endLine":29,"endColumn":10,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":34,"column":8,"nodeType":"153","messageId":"154","endLine":34,"endColumn":18},{"ruleId":"151","severity":1,"message":"164","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":35},{"ruleId":"151","severity":1,"message":"165","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":19},{"ruleId":"151","severity":1,"message":"166","line":3,"column":9,"nodeType":"153","messageId":"154","endLine":3,"endColumn":24},{"ruleId":"159","severity":1,"message":"167","line":12,"column":8,"nodeType":"161","endLine":12,"endColumn":10,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":153,"column":25,"nodeType":"171","endLine":156,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":161,"column":25,"nodeType":"171","endLine":164,"endColumn":26},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'forgotPassword' is defined but never used.","'login' is defined but never used.","'Toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["174"],"'UserHeader' is defined but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'confirmRegister' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["175"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [id, props.history]",{"range":"180","text":"181"},"Update the dependencies array to be: [props.history]",{"range":"182","text":"183"},[905,907],"[id, props.history]",[374,376],"[props.history]"]